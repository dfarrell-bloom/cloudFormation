{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Test CloudFormation Route53",
 
  "Parameters": {
    "PublicDNSDomain": {
      "Description": "Domain of names to register in DNS",
      "Type": "String", 
      "Default": "r53pofc.moolbdev.com."
    },
  
    "PrivateDNSDomain": {
      "Description": "Domain of names to register in DNS",
      "Type": "String", 
      "Default": "r53pofc.moolbdev.com."
    },
    "PrivateDNSSuffix": {
      "Description": "Domain of names to register in DNS",
      "Type": "String", 
      "Default": "-internal"
    }
  },


  "Mappings": {
    "SubnetConfig": {
      "VPC"     : { "CIDR" : "10.0.0.0/16" },
      "Nat"     : { "CIDR" : "10.0.0.0/24" },
      "Private" : { "CIDR" : "10.0.32.0/22" }
    },
    "InstanceConfig": {
        "Nat": {
            "AMI": "ami-58a3cf68"
        }
    }
  },

  "Resources": {

    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ]},
        "Tags": [ ]
      }
    },
    
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": { "Tags": [ ] }
    },

    "AttachGateway": {
       "Type": "AWS::EC2::VPCGatewayAttachment",
       "Properties": {
         "VpcId": { "Ref": "VPC" },
         "InternetGatewayId": { "Ref": "InternetGateway" }
       }
    },


    "NatSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Fn::FindInMap" : [ "SubnetConfig", "Nat", "CIDR" ]},
        "Tags": [ ]
      }
    },

    "NatRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {"Key": "BloomEnvironment", "Value": "CloudFormationTesting" }
        ]
      }
    },

    "NatRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": { "Ref": "NatRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },

    "NatSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "NatSubnet" },
        "RouteTableId": { "Ref": "NatRouteTable" }
      }
    },

    "NatNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [ ]
      }
    },

    "InboundICMPNatNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NatNetworkAcl"},
        "RuleNumber": "111",
        "Protocol": "0",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "-1", "To": "-1"}
      }
    },
    "OutboundICMPNatNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NatNetworkAcl"},
        "RuleNumber": "112",
        "Protocol": "0",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "-1", "To": "-1"}
      }
    },

    "InboundSSHNatNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NatNetworkAcl"},
        "RuleNumber": "101",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "22", "To": "22"}
      }
    },

    "InboundHTTPNatNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NatNetworkAcl"},
        "RuleNumber": "102",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "80", "To": "80"}
      }
    },

    "InboundDynamicPortsNatNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NatNetworkAcl"},
        "RuleNumber": "151",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "1024", "To": "65535"}
      }
    },

    "OutboundAllNatNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NatNetworkAcl"},
        "RuleNumber": "100",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "0", "To": "65535"}
      }
    },

    "NatSubnetNetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": { "Ref": "NatSubnet" },
        "NetworkAclId": { "Ref": "NatNetworkAcl" }
      }
    },
    
    "NatSecurityGroup": {
       "Type": "AWS::EC2::SecurityGroup",
       "Properties": {
          "GroupDescription": "Allow ssh, http[s], icmp to client host",
          "VpcId": {"Ref": "VPC"},
          "SecurityGroupIngress": [
            {
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": "0.0.0.0/0"
            },
            {
             "IpProtocol": "icmp",
             "FromPort": "-1",
             "ToPort": "-1",
             "CidrIp": "0.0.0.0/0"
            }
          ],
          "SecurityGroupEgress": [
            {
             "IpProtocol": "tcp",
             "FromPort": "0",
             "ToPort": "65535",
             "CidrIp": "0.0.0.0/0"
            },
            {
             "IpProtocol": "icmp",
             "FromPort": "-1",
             "ToPort": "-1",
             "CidrIp": "0.0.0.0/0"
            }
          ]
       }
    },
    
    "NatInstance": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
           "ImageId": { "Fn::FindInMap" : [ "InstanceConfig", "Nat", "AMI" ] },
           "InstanceType": "m1.small", 
           "KeyName": "dfarrell",
           "NetworkInterfaces": [
            {
              "AssociatePublicIpAddress": true,
              "DeleteOnTermination": true,
              "DeviceIndex": 0,
              "SubnetId": { "Ref": "NatSubnet" },
              "GroupSet": [ {"Ref": "NatSecurityGroup"} ]
            }
           ], 
           "SourceDestCheck": "false"
        },
        "DependsOn": "AttachGateway"
    },
    "NatInstancePrivateRecord": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneName": { "Ref": "PrivateDNSDomain" },
                "Comment":  "CNAME records for NAT instance.",
                "Name": { "Fn::Join": ["", [ "nat-internal", ".", { "Ref": "PrivateDNSDomain" } ] ] },
                "Type": "A",
                "TTL": "30",
                "ResourceRecords" : [
                   { "Fn::GetAtt": [ "NatInstance", "PrivateIp" ] }
                ]
            },
            "DependsOn": [ "NatInstance" ] 
     },
    "NatInstanceRecord": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneName": { "Ref": "PublicDNSDomain" },
                "Comment":  "CNAME records for NAT instance.",
                "Name": { "Fn::Join": ["", [ "nat", ".", { "Ref": "PublicDNSDomain" } ] ] },
                "Type": "A",
                "TTL": "30",
                "ResourceRecords" : [
                   { "Fn::GetAtt": [ "NatInstance", "PublicIp" ] }
                ]
            },
            "DependsOn": [ "NatInstance" ] 
     }
  }
}
