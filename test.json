{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Test Bloom CloudFormation Template",

  "Mappings": {
    "SubnetConfig" : {
      "VPC"     : { "CIDR" : "10.0.0.0/16" },
      "Public"  : { "CIDR" : "10.0.0.0/24" },
      "Private" : { "CIDR" : "10.0.1.0/24" }
    } 
  },

  "Resources": {

    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ]},
        "Tags": [
          {"Key": "BloomEnvironment", "Value": "CloudFormationTesting" }
        ]
      }
    },

    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Fn::FindInMap" : [ "SubnetConfig", "Public", "CIDR" ]},
        "Tags": [
          {"Key": "BloomEnvironment", "Value": "CloudFormationTesting" }
        ]
      }
    },

    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {"Key": "BloomEnvironment", "Value": "CloudFormationTesting" }
        ]
      }
    },

    "AttachGateway": {
       "Type": "AWS::EC2::VPCGatewayAttachment",
       "Properties": {
         "VpcId": { "Ref": "VPC" },
         "InternetGatewayId": { "Ref": "InternetGateway" }
       }
    },

    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {"Key": "BloomEnvironment", "Value": "CloudFormationTesting" }
        ]
      }
    },

    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },

    "PublicSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet" },
        "RouteTableId": { "Ref": "PublicRouteTable" }
      }
    },

    "PublicNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {"Key": "BloomEnvironment", "Value": "CloudFormationTesting" }
        ]
      }
    },

    "InboundICMPPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "111",
        "Protocol": "0",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "-1", "To": "-1"}
      }
    },
    "OutboundICMPPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "112",
        "Protocol": "0",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "-1", "To": "-1"}
      }
    },

    "InboundSSHPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "101",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "22", "To": "22"}
      }
    },

    "InboundHTTPPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "102",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "80", "To": "80"}
      }
    },

    "InboundDynamicPortsPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "151",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "1024", "To": "65535"}
      }
    },

    "OutboundAllPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "100",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "0", "To": "65535"}
      }
    },

    "PublicSubnetNetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet" },
        "NetworkAclId": { "Ref": "PublicNetworkAcl" }
      }
    },

    "PrivateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Fn::FindInMap" : [ "SubnetConfig", "Private", "CIDR" ]},
        "Tags": [
          {"Key": "BloomEnvironment", "Value": "CloudFormationTesting" }
        ]
      }
    },

    "PrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {"Key": "BloomEnvironment", "Value": "CloudFormationTesting" }
        ]
      }
    },
    
    "PrivateRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": { "Ref": "NatInstance" }
      }
    },


    "PrivateSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnet" },
        "RouteTableId": { "Ref": "PrivateRouteTable" }
      }
    },

    "PrivateNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {"Key": "BloomEnvironment", "Value": "CloudFormationTesting" }
        ]
      }
    },

    "InboundICMPPrivateNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PrivateNetworkAcl"},
        "RuleNumber": "111",
        "Protocol": "0",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "-1", "To": "-1"}
      }
    },
    "OutboundICMPPrivateNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PrivateNetworkAcl"},
        "RuleNumber": "112",
        "Protocol": "0",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "-1", "To": "-1"}
      }
    },

    "InboundPrivateNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PrivateNetworkAcl"},
        "RuleNumber": "100",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "0", "To": "65535"}
      }
    },

    "OutBoundPrivateNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PrivateNetworkAcl"},
        "RuleNumber": "100",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {"From": "0", "To": "65535"}
      }
    },

    "PrivateSubnetNetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnet" },
        "NetworkAclId": { "Ref": "PrivateNetworkAcl" }
      }
    },
    "PublicSecurityGroup": {
       "Type": "AWS::EC2::SecurityGroup",
       "Properties": {
          "GroupDescription": "Allow ssh, http[s], icmp to client host",
          "VpcId": {"Ref": "VPC"},
          "SecurityGroupIngress": [
            {
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": "0.0.0.0/0"
            },
            {
             "IpProtocol": "tcp",
             "FromPort": "80",
             "ToPort": "80",
             "CidrIp": "0.0.0.0/0"
            },
            {
             "IpProtocol": "tcp",
             "FromPort": "443",
             "ToPort": "443",
             "CidrIp": "0.0.0.0/0"
            },
            {
             "IpProtocol": "icmp",
             "FromPort": "-1",
             "ToPort": "-1",
             "CidrIp": "0.0.0.0/0"
            }
          ],
          "SecurityGroupEgress": [{
             "IpProtocol": "tcp",
             "FromPort": "0",
             "ToPort": "65535",
             "CidrIp": "0.0.0.0/0"
            },
            {
             "IpProtocol": "icmp",
             "FromPort": "-1",
             "ToPort": "-1",
             "CidrIp": "0.0.0.0/0"
            }
          ]
       }
    },
    "PrivateSecurityGroup": {
       "Type": "AWS::EC2::SecurityGroup",
       "Properties": {
          "GroupDescription": "Allow ssh to client host",
          "VpcId": {"Ref": "VPC"},
          "SecurityGroupIngress": [
            {
             "IpProtocol": "tcp",
             "FromPort": "0",
             "ToPort": "65535",
             "CidrIp": { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ]}
            },
            {
             "IpProtocol": "icmp",
             "FromPort": "-1",
             "ToPort": "-1",
             "CidrIp": "0.0.0.0/0"
            }
          ],
          "SecurityGroupEgress": [
            {
             "IpProtocol": "tcp",
             "FromPort": "0",
             "ToPort": "65535",
             "CidrIp": "0.0.0.0/0"
            },
            {
             "IpProtocol": "icmp",
             "FromPort": "-1",
             "ToPort": "-1",
             "CidrIp": "0.0.0.0/0"
            }
          ]
       }
    },     

    "NatInstance": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
           "ImageId": "ami-58a3cf68",
           "InstanceType": "m1.small", 
           "KeyName": "Sous",
           "SourceDestCheck": "false",
           "SubnetId": { "Ref": "PublicSubnet" },
           "UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
                "#!/bin/bash -v\n",
                "echo 1 > /proc/sys/net/ipv4/ip_forward\n",
                "iptables -t nat -I POSTROUTING --source ", 
                    { "Fn::FindInMap" : [ "SubnetConfig", "Private", "CIDR" ]},
                    " -j MASQUERADE\n"
           ] ]} },      
           "SecurityGroupIds": [ { "Fn::GetAtt" : [ "PublicSecurityGroup", "GroupId" ] } ]
        },
        "DependsOn": "AttachGateway"
    },

    "PrivateInstance": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
           "ImageId": "ami-58a3cf68",
           "InstanceType": "m3.large", 
           "IamInstanceProfile": "TestStack-ProvisioningDeployment",
           "KeyName": "Sous",
           "SubnetId": { "Ref": "PrivateSubnet" },
           "UserData": "IyEvYmluL2Jhc2gKZWNobyAiVGhpcyB3YXMgd3JpdHRlbiBmcm9tIFVzZXJEYXRhIG9uIGBkYXRlYCIgPiAvdG1wL3VzZXJkYXRhLm91dHB1dAo=",
           "SecurityGroupIds": [ { "Fn::GetAtt" : [ "PrivateSecurityGroup", "GroupId" ] } ]
        },
        "DependsOn": "AttachGateway"
    },

    "NatInstanceEIP": {
        "Type": "AWS::EC2::EIP",
        "Properties": {
            "InstanceId": { "Ref": "NatInstance" }, 
            "Domain": "vpc"
        },
        "DependsOn": "AttachGateway"
    }
  }
}
